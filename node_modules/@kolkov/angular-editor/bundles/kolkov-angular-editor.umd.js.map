{"version":3,"file":"kolkov-angular-editor.umd.js","sources":["ng://@kolkov/angular-editor/lib/angular-editor.service.ts","ng://@kolkov/angular-editor/lib/config.ts","ng://@kolkov/angular-editor/lib/angular-editor-toolbar.component.ts","ng://@kolkov/angular-editor/lib/angular-editor.component.ts","ng://@kolkov/angular-editor/lib/angular-editor.module.ts"],"sourcesContent":["import {Inject, Injectable} from '@angular/core';\r\nimport {HttpClient, HttpEvent} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {DOCUMENT} from \"@angular/common\";\r\nimport {CustomClass} from \"./config\";\r\n\r\nexport interface UploadResponse {\r\n  imageUrl: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AngularEditorService {\r\n\r\n  savedSelection: Range | null;\r\n  selectedText: string;\r\n  uploadUrl: string;\r\n\r\n\r\n  constructor(private http: HttpClient, @Inject(DOCUMENT) private _document: any) {\r\n  }\r\n\r\n  /**\r\n   * Executed command from editor header buttons exclude toggleEditorMode\r\n   * @param command string from triggerCommand\r\n   */\r\n  executeCommand(command: string) {\r\n    const commands = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p', 'pre'];\r\n    if (commands.includes(command)) {\r\n      this._document.execCommand('formatBlock', false, command);\r\n    }\r\n\r\n    this._document.execCommand(command, false, null);\r\n  }\r\n\r\n  /**\r\n   * Create URL link\r\n   * @param url string from UI prompt\r\n   */\r\n  createLink(url: string) {\r\n    if (!url.includes(\"http\")) {\r\n      this._document.execCommand('createlink', false, url);\r\n    } else {\r\n      const newUrl = '<a href=\"' + url + '\" target=\"_blank\">' + this.selectedText + '</a>';\r\n      this.insertHtml(newUrl);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * insert color either font or background\r\n   *\r\n   * @param color color to be inserted\r\n   * @param where where the color has to be inserted either text/background\r\n   */\r\n  insertColor(color: string, where: string): void {\r\n    const restored = this.restoreSelection();\r\n    if (restored) {\r\n      if (where === 'textColor') {\r\n        this._document.execCommand('foreColor', false, color);\r\n      } else {\r\n        this._document.execCommand('hiliteColor', false, color);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set font name\r\n   * @param fontName string\r\n   */\r\n  setFontName(fontName: string) {\r\n    this._document.execCommand(\"fontName\", false, fontName);\r\n  }\r\n\r\n  /**\r\n   * Set font size\r\n   * @param fontSize string\r\n   */\r\n  setFontSize(fontSize: string) {\r\n    this._document.execCommand(\"fontSize\", false, fontSize);\r\n  }\r\n\r\n  /**\r\n   * Create raw HTML\r\n   * @param html HTML string\r\n   */\r\n  private insertHtml(html: string): void {\r\n\r\n    const isHTMLInserted = this._document.execCommand('insertHTML', false, html);\r\n\r\n    if (!isHTMLInserted) {\r\n      throw new Error('Unable to perform the operation');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * save selection when the editor is focussed out\r\n   */\r\n  saveSelection(): any {\r\n    if (window.getSelection) {\r\n      const sel = window.getSelection();\r\n      if (sel.getRangeAt && sel.rangeCount) {\r\n        this.savedSelection = sel.getRangeAt(0);\r\n        this.selectedText = sel.toString();\r\n      }\r\n    } else if (this._document.getSelection && this._document.createRange) {\r\n      this.savedSelection = document.createRange();\r\n    } else {\r\n      this.savedSelection = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * restore selection when the editor is focussed in\r\n   *\r\n   * saved selection when the editor is focussed out\r\n   */\r\n  restoreSelection(): boolean {\r\n    if (this.savedSelection) {\r\n      if (window.getSelection) {\r\n        const sel = window.getSelection();\r\n        sel.removeAllRanges();\r\n        sel.addRange(this.savedSelection);\r\n        return true;\r\n      } else if (this._document.getSelection /*&& this.savedSelection.select*/) {\r\n        // this.savedSelection.select();\r\n        return true;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /** check any slection is made or not */\r\n  private checkSelection(): any {\r\n\r\n    const slectedText = this.savedSelection.toString();\r\n\r\n    if (slectedText.length === 0) {\r\n      throw new Error('No Selection Made');\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Upload file to uploadUrl\r\n   * @param file\r\n   */\r\n  uploadImage(file: File): Observable<HttpEvent<UploadResponse>> {\r\n\r\n    const uploadData: FormData = new FormData();\r\n\r\n    uploadData.append('file', file, file.name);\r\n\r\n    return this.http.post<UploadResponse>(this.uploadUrl, uploadData, {\r\n      reportProgress: true,\r\n      observe: 'events',\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Insert image with Url\r\n   * @param imageUrl\r\n   */\r\n  insertImage(imageUrl: string) {\r\n    this._document.execCommand('insertImage', false, imageUrl);\r\n  }\r\n\r\n  setDefaultParagraphSeparator(separator: string) {\r\n    this._document.execCommand(\"defaultParagraphSeparator\", false, separator);\r\n  }\r\n\r\n  createCustomClass(customClass: CustomClass) {\r\n    let newTag = this.selectedText;\r\n    if(customClass){\r\n      const tagName = customClass.tag ? customClass.tag : 'span';\r\n      newTag = '<' + tagName + ' class=\"' + customClass.class + '\">' + this.selectedText + '</' + tagName + '>';\r\n    }\r\n    \r\n    this.insertHtml(newTag);\r\n  }\r\n}\r\n","export interface CustomClass {\r\n  name: string;\r\n  class: string;\r\n  tag?: string;\r\n}\r\n\r\nexport interface Font {\r\n  name: string;\r\n  class: string;\r\n}\r\n\r\nexport interface AngularEditorConfig {\r\n  editable?: boolean;\r\n  spellcheck?: boolean;\r\n  height?: 'auto' | string;\r\n  minHeight?: '0' | string;\r\n  maxHeight?: 'auto' | string;\r\n  width?: 'auto' | string;\r\n  minWidth?: '0' | string;\r\n  translate?: 'yes' | 'now' | string;\r\n  enableToolbar?: boolean;\r\n  showToolbar?: boolean;\r\n  placeholder?: string;\r\n  defaultParagraphSeparator?: string;\r\n  defaultFontName?: string;\r\n  defaultFontSize?: '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | string;\r\n  uploadUrl?: string;\r\n  fonts?: Font[];\r\n  customClasses?: CustomClass[];\r\n}\r\n\r\nexport const angularEditorConfig: AngularEditorConfig = {\r\n  editable: true,\r\n  spellcheck: true,\r\n  height: 'auto',\r\n  minHeight: '0',\r\n  maxHeight: 'auto',\r\n  width: 'auto',\r\n  minWidth: '0',\r\n  translate: 'yes',\r\n  enableToolbar: true,\r\n  showToolbar: true,\r\n  placeholder: 'Enter text here...',\r\n  defaultParagraphSeparator: '',\r\n  defaultFontName: '',\r\n  defaultFontSize: '',\r\n  fonts: [\r\n    {class: 'arial', name: 'Arial'},\r\n    {class: 'times-new-roman', name: 'Times New Roman'},\r\n    {class: 'calibri', name: 'Calibri'},\r\n    {class: 'comic-sans-ms', name: 'Comic Sans MS'}\r\n  ],\r\n  uploadUrl: 'v1/image',\r\n};\r\n","import {Component, ElementRef, EventEmitter, Inject, Output, Renderer2, ViewChild} from \"@angular/core\";\r\nimport {AngularEditorService} from \"./angular-editor.service\";\r\nimport {HttpResponse} from \"@angular/common/http\";\r\nimport {DOCUMENT} from \"@angular/common\";\r\nimport {CustomClass, Font} from \"./config\";\r\n\r\n@Component({\r\n  selector: 'angular-editor-toolbar',\r\n  templateUrl: './angular-editor-toolbar.component.html',\r\n  styleUrls: ['./angular-editor-toolbar.component.scss']\r\n})\r\n\r\nexport class AngularEditorToolbarComponent {\r\n  id = '';\r\n  htmlMode = false;\r\n  showToolbar = true;\r\n\r\n  block = 'default';\r\n  defaultFontId;\r\n  fontId = 0;\r\n  fontSize = '5';\r\n  fonts: Font[];\r\n\r\n  customClassId = -1;\r\n  customClasses: CustomClass[];\r\n  uploadUrl:string;\r\n\r\n  tagMap = {\r\n    BLOCKQUOTE: \"indent\",\r\n    A: \"link\"\r\n  };\r\n\r\n  select = [\"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\", \"P\", \"PRE\", \"DIV\"];\r\n\r\n  buttons = [\"bold\", \"italic\", \"underline\", \"strikeThrough\", \"subscript\", \"superscript\", \"justifyLeft\", \"justifyCenter\",\r\n    \"justifyRight\", \"justifyFull\", \"indent\", \"outdent\", \"insertUnorderedList\", \"insertOrderedList\", \"link\"];\r\n\r\n  @Output() execute: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  @ViewChild('fileInput') myInputFile: ElementRef;\r\n\r\n  constructor(private _renderer: Renderer2,\r\n              private editorService: AngularEditorService, @Inject(DOCUMENT) private _document: any) {\r\n  }\r\n\r\n  /**\r\n   * Trigger command from editor header buttons\r\n   * @param command string from toolbar buttons\r\n   */\r\n  triggerCommand(command: string) {\r\n    this.execute.emit(command);\r\n  }\r\n\r\n  /**\r\n   * highlight editor buttons when cursor moved or positioning\r\n   */\r\n  triggerButtons() {\r\n    if (!this.showToolbar) {\r\n      return;\r\n    }\r\n    this.buttons.forEach(e => {\r\n      const result = this._document.queryCommandState(e);\r\n      const elementById = this._document.getElementById(e + '-' + this.id);\r\n      if (result) {\r\n        this._renderer.addClass(elementById, \"active\");\r\n      } else {\r\n        this._renderer.removeClass(elementById, \"active\");\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * trigger highlight editor buttons when cursor moved or positioning in block\r\n   */\r\n  triggerBlocks(nodes: Node[]) {\r\n    if (!this.showToolbar) {\r\n      return;\r\n    }\r\n    let found = false;\r\n    this.select.forEach(y => {\r\n      const node = nodes.find(x => x.nodeName === y);\r\n      if (node !== undefined && y === node.nodeName) {\r\n        if (found === false) {\r\n          this.block = node.nodeName.toLowerCase();\r\n          found = true;\r\n        }\r\n      } else if (found === false) {\r\n        this.block = 'default';\r\n      }\r\n    });\r\n\r\n    found = false;\r\n    if (this.fonts) {\r\n      this.fonts.forEach((y, index) => {\r\n        const node = nodes.find(x => {\r\n          if (x instanceof HTMLFontElement) {\r\n            return x.face === y.name;\r\n          }\r\n        });\r\n        if (node !== undefined) {\r\n          if (found === false) {\r\n            this.fontId = index;\r\n            found = true;\r\n          }\r\n        } else if (found === false) {\r\n          this.fontId = this.defaultFontId;\r\n        }\r\n      });\r\n    }\r\n\r\n    found = false;\r\n    if (this.customClasses) {\r\n      this.customClasses.forEach((y, index) => {\r\n        const node = nodes.find(x => {\r\n          if (x instanceof Element) {\r\n            return x.className === y.class;\r\n          }\r\n        });\r\n        if (node !== undefined) {\r\n          if (found === false) {\r\n            this.customClassId = index;\r\n            found = true;\r\n          }\r\n        } else if (found === false) {\r\n          this.customClassId = -1;\r\n        }\r\n      });\r\n    }\r\n\r\n    Object.keys(this.tagMap).map(e => {\r\n      const elementById = this._document.getElementById(this.tagMap[e] + '-' + this.id);\r\n      const node = nodes.find(x => x.nodeName === e);\r\n      if (node !== undefined && e === node.nodeName) {\r\n        this._renderer.addClass(elementById, \"active\");\r\n      } else {\r\n        this._renderer.removeClass(elementById, \"active\");\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * insert URL link\r\n   */\r\n  insertUrl() {\r\n    const url = prompt(\"Insert URL link\", 'http:\\/\\/');\r\n    if (url && url !== '' && url !== 'http://') {\r\n      this.editorService.createLink(url);\r\n    }\r\n  }\r\n\r\n  /** insert color */\r\n  insertColor(color: string, where: string) {\r\n    this.editorService.insertColor(color, where);\r\n    this.execute.emit(\"\");\r\n  }\r\n\r\n  /**\r\n   * set font Name/family\r\n   * @param fontId number\r\n   */\r\n  setFontName(fontId: number): void {\r\n    this.editorService.setFontName(this.fonts[fontId].name);\r\n    this.execute.emit(\"\");\r\n  }\r\n\r\n  /**\r\n   * set font Size\r\n   * @param fontSize string\r\n   *  */\r\n  setFontSize(fontSize: string): void {\r\n    this.editorService.setFontSize(fontSize);\r\n    this.execute.emit(\"\");\r\n  }\r\n\r\n  /**\r\n   * toggle editor mode (WYSIWYG or SOURCE)\r\n   * @param m boolean\r\n   */\r\n  setEditorMode(m: boolean) {\r\n    const toggleEditorModeButton = this._document.getElementById(\"toggleEditorMode\" + '-' + this.id);\r\n    if (m) {\r\n      this._renderer.addClass(toggleEditorModeButton, \"active\");\r\n    } else {\r\n      this._renderer.removeClass(toggleEditorModeButton, \"active\");\r\n    }\r\n    this.htmlMode = m;\r\n  }\r\n\r\n  /**\r\n   * Upload image when file is selected\r\n   */\r\n  onFileChanged(event) {\r\n    const file = event.target.files[0];\r\n      if (file.type.includes(\"image/\")) {\r\n        if(this.uploadUrl){\r\n            this.editorService.uploadImage(file).subscribe(e => {\r\n              if (e instanceof HttpResponse) {\r\n                this.editorService.insertImage(e.body.imageUrl);\r\n                this.fileReset();\r\n              }\r\n            });\r\n        } else{\r\n          var reader = new FileReader();\r\n          reader.onload = (_event) => {\r\n            this.editorService.insertImage(_event.target['result']);\r\n          }\r\n          reader.readAsDataURL(file);\r\n        }\r\n      }\r\n  }\r\n\r\n  /**\r\n   * Reset Input\r\n   */\r\n  fileReset() {\r\n    this.myInputFile.nativeElement.value = \"\";\r\n  }\r\n\r\n  /**\r\n   * Set custom class\r\n   */\r\n  setCustomClass(classId: number) {\r\n    this.editorService.createCustomClass(this.customClasses[classId]);\r\n  }\r\n}\r\n","import {\r\n  AfterContentInit,\r\n  Component,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from \"@angular/forms\";\r\nimport {AngularEditorConfig, angularEditorConfig} from \"./config\";\r\nimport {AngularEditorToolbarComponent} from \"./angular-editor-toolbar.component\";\r\nimport {AngularEditorService} from \"./angular-editor.service\";\r\nimport {DOCUMENT} from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: 'angular-editor',\r\n  templateUrl: \"./angular-editor.component.html\",\r\n  styleUrls: [\"./angular-editor.component.scss\"],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => AngularEditorComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class AngularEditorComponent implements OnInit, ControlValueAccessor, AfterContentInit {\r\n\r\n  private onChange: (value: string) => void;\r\n  private onTouched: () => void;\r\n\r\n  placeholder: boolean;\r\n\r\n  modeVisual = true;\r\n  showPlaceholder = false;\r\n  @Input() id = '';\r\n  @Input() config: AngularEditorConfig = angularEditorConfig;\r\n\r\n  @Output() html;\r\n\r\n  @ViewChild('editor') textArea: any;\r\n  @ViewChild('editorWrapper') editorWrapper: any;\r\n  @ViewChild('editorToolbar') editorToolbar: AngularEditorToolbarComponent;\r\n\r\n  @Output() viewMode = new EventEmitter<boolean>();\r\n\r\n  /** emits `blur` event when focused out from the textarea */\r\n  @Output() blur: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  /** emits `focus` event when focused in to the textarea */\r\n  @Output() focus: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor(private _renderer: Renderer2, private editorService: AngularEditorService, @Inject(DOCUMENT) private _document: any) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.editorToolbar.id = this.id;\r\n    this.editorToolbar.fonts = this.config.fonts ? this.config.fonts : angularEditorConfig.fonts;\r\n    this.editorToolbar.customClasses = this.config.customClasses;\r\n    this.editorToolbar.uploadUrl = this.config.uploadUrl;\r\n    this.editorService.uploadUrl = this.config.uploadUrl;\r\n    if (this.config.showToolbar !== undefined) {\r\n      this.editorToolbar.showToolbar = this.config.showToolbar;\r\n    }\r\n    if (this.config.defaultParagraphSeparator) {\r\n      this.editorService.setDefaultParagraphSeparator(this.config.defaultParagraphSeparator);\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (this.config.defaultFontName) {\r\n      this.editorToolbar.defaultFontId = this.config.defaultFontName ? this.editorToolbar.fonts.findIndex(x => {\r\n        return x.name === this.config.defaultFontName;\r\n      }) : 0;\r\n      this.editorToolbar.fontId = this.editorToolbar.defaultFontId;\r\n      this.onEditorFocus();\r\n      this.editorService.setFontName(this.config.defaultFontName);\r\n    } else {\r\n      this.editorToolbar.defaultFontId = 0;\r\n      this.editorToolbar.fontId = 0;\r\n    }\r\n    if (this.config.defaultFontSize) {\r\n      this.editorToolbar.fontSize = this.config.defaultFontSize;\r\n      this.onEditorFocus();\r\n      this.editorService.setFontSize(this.config.defaultFontSize);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Executed command from editor header buttons\r\n   * @param command string from triggerCommand\r\n   */\r\n  executeCommand(command: string) {\r\n    if (command === 'toggleEditorMode') {\r\n      this.toggleEditorMode(this.modeVisual);\r\n    } else if (command !== '') {\r\n      this.editorService.executeCommand(command);\r\n      this.exec();\r\n    }\r\n\r\n    this.onEditorFocus();\r\n  }\r\n\r\n  /**\r\n   * focus event\r\n   */\r\n  onTextAreaFocus(): void {\r\n    this.focus.emit('focus');\r\n  }\r\n\r\n  /**\r\n   * blur event\r\n   */\r\n  onTextAreaBlur(event: FocusEvent) {\r\n    /**\r\n     * save selection if focussed out\r\n     */\r\n    this.editorService.saveSelection();\r\n\r\n    if (typeof this.onTouched === 'function') {\r\n      this.onTouched();\r\n    }\r\n\r\n    if (event.relatedTarget != null && (event.relatedTarget as HTMLElement).parentElement.className !== 'angular-editor-toolbar-set') {\r\n      this.blur.emit('blur');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  focus the text area when the editor is focussed\r\n   */\r\n  onEditorFocus() {\r\n    this.textArea.nativeElement.focus();\r\n  }\r\n\r\n  /**\r\n   * Executed from the contenteditable section while the input property changes\r\n   * @param html html string from contenteditable\r\n   */\r\n  onContentChange(html: string): void {\r\n\r\n    if (typeof this.onChange === 'function') {\r\n      this.onChange(html);\r\n      if ((!html || html === '<br>' || html === '') !== this.showPlaceholder) {\r\n        this.togglePlaceholder(this.showPlaceholder);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the function to be called\r\n   * when the control receives a change event.\r\n   *\r\n   * @param fn a function\r\n   */\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  /**\r\n   * Set the function to be called\r\n   * when the control receives a touch event.\r\n   *\r\n   * @param fn a function\r\n   */\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  /**\r\n   * Write a new value to the element.\r\n   *\r\n   * @param value value to be executed when there is a change in contenteditable\r\n   */\r\n  writeValue(value: any): void {\r\n\r\n    if ((!value || value === '<br>' || value === '') !== this.showPlaceholder) {\r\n      this.togglePlaceholder(this.showPlaceholder);\r\n    }\r\n\r\n    if (value === null || value === undefined || value === '' || value === '<br>') {\r\n      value = null;\r\n    }\r\n\r\n    this.refreshView(value);\r\n  }\r\n\r\n  /**\r\n   * refresh view/HTML of the editor\r\n   *\r\n   * @param value html string from the editor\r\n   */\r\n  refreshView(value: string): void {\r\n    const normalizedValue = value === null ? '' : value;\r\n    this._renderer.setProperty(this.textArea.nativeElement, 'innerHTML', normalizedValue);\r\n\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * toggles placeholder based on input string\r\n   *\r\n   * @param value A HTML string from the editor\r\n   */\r\n  togglePlaceholder(value: boolean): void {\r\n    if (!value) {\r\n      this._renderer.addClass(this.editorWrapper.nativeElement, 'show-placeholder');\r\n      this.showPlaceholder = true;\r\n\r\n    } else {\r\n      this._renderer.removeClass(this.editorWrapper.nativeElement, 'show-placeholder');\r\n      this.showPlaceholder = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Implements disabled state for this element\r\n   *\r\n   * @param isDisabled\r\n   */\r\n  setDisabledState(isDisabled: boolean): void {\r\n    const div = this.textArea.nativeElement;\r\n    const action = isDisabled ? 'addClass' : 'removeClass';\r\n    this._renderer[action](div, 'disabled');\r\n  }\r\n\r\n  /**\r\n   * toggles editor mode based on bToSource bool\r\n   *\r\n   * @param bToSource A boolean value from the editor\r\n   */\r\n  toggleEditorMode(bToSource: boolean) {\r\n    let oContent: any;\r\n    const editableElement = this.textArea.nativeElement;\r\n\r\n    if (bToSource) {\r\n      oContent = this._document.createTextNode(editableElement.innerHTML);\r\n      editableElement.innerHTML = '';\r\n\r\n      const oPre = this._document.createElement('pre');\r\n      oPre.setAttribute(\"style\", \"margin: 0; outline: none;\");\r\n      const oCode = this._document.createElement('code');\r\n      editableElement.contentEditable = false;\r\n      oCode.id = \"sourceText\";\r\n      oCode.setAttribute(\"style\", \"white-space: pre-wrap; word-break: keep-all; margin: 0; outline: none; background-color: #fff5b9;\");\r\n      oCode.contentEditable = 'true';\r\n      oCode.appendChild(oContent);\r\n      oPre.appendChild(oCode);\r\n      editableElement.appendChild(oPre);\r\n\r\n      this._document.execCommand(\"defaultParagraphSeparator\", false, \"div\");\r\n\r\n      this.modeVisual = false;\r\n      this.viewMode.emit(false);\r\n      oCode.focus();\r\n    } else {\r\n      if (this._document.all) {\r\n        editableElement.innerHTML = editableElement.innerText;\r\n      } else {\r\n        oContent = this._document.createRange();\r\n        oContent.selectNodeContents(editableElement.firstChild);\r\n        editableElement.innerHTML = oContent.toString();\r\n      }\r\n      editableElement.contentEditable = true;\r\n      this.modeVisual = true;\r\n      this.viewMode.emit(true);\r\n      this.onContentChange(editableElement.innerHTML);\r\n      editableElement.focus();\r\n    }\r\n    this.editorToolbar.setEditorMode(!this.modeVisual);\r\n  }\r\n\r\n  /**\r\n   * toggles editor buttons when cursor moved or positioning\r\n   *\r\n   * Send a node array from the contentEditable of the editor\r\n   */\r\n  exec() {\r\n    this.editorToolbar.triggerButtons();\r\n\r\n    let userSelection;\r\n    if (window.getSelection) {\r\n      userSelection = window.getSelection();\r\n    }\r\n\r\n    let a = userSelection.focusNode;\r\n    const els = [];\r\n    while (a && a.id !== 'editor') {\r\n      els.unshift(a);\r\n      a = a.parentNode;\r\n    }\r\n    this.editorToolbar.triggerBlocks(els);\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {AngularEditorComponent} from './angular-editor.component';\r\nimport {AngularEditorToolbarComponent} from \"./angular-editor-toolbar.component\";\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {CommonModule} from \"@angular/common\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule, FormsModule, ReactiveFormsModule\r\n  ],\r\n  declarations: [AngularEditorComponent, AngularEditorToolbarComponent],\r\n  exports: [AngularEditorComponent, AngularEditorToolbarComponent]\r\n})\r\nexport class AngularEditorModule {\r\n}\r\n"],"names":["Injectable","HttpClient","Inject","DOCUMENT","EventEmitter","HttpResponse","Component","Renderer2","Output","ViewChild","NG_VALUE_ACCESSOR","forwardRef","Input","NgModule","CommonModule","FormsModule","ReactiveFormsModule"],"mappings":"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"}